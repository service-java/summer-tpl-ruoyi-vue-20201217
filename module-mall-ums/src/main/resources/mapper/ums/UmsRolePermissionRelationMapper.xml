<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.ums.mapper.UmsRolePermissionRelationMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.ums.domain.UmsRolePermissionRelation">
    <!--@mbg.generated-->
    <!--@Table ums_role_permission_relation-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="role_id" jdbcType="BIGINT" property="roleId" />
    <result column="permission_id" jdbcType="BIGINT" property="permissionId" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, role_id, permission_id
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ums_role_permission_relation
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="role_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.roleId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="permission_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.permissionId,jdbcType=BIGINT}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ums_role_permission_relation
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="role_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.roleId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.roleId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="permission_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.permissionId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.permissionId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_role_permission_relation
    (role_id, permission_id)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.roleId,jdbcType=BIGINT}, #{item.permissionId,jdbcType=BIGINT})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.ums.domain.UmsRolePermissionRelation" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_role_permission_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      role_id,
      permission_id,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{roleId,jdbcType=BIGINT},
      #{permissionId,jdbcType=BIGINT},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      role_id = #{roleId,jdbcType=BIGINT},
      permission_id = #{permissionId,jdbcType=BIGINT},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.ums.domain.UmsRolePermissionRelation" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_role_permission_relation
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="roleId != null">
        role_id,
      </if>
      <if test="permissionId != null">
        permission_id,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        #{permissionId,jdbcType=BIGINT},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="roleId != null">
        role_id = #{roleId,jdbcType=BIGINT},
      </if>
      <if test="permissionId != null">
        permission_id = #{permissionId,jdbcType=BIGINT},
      </if>
    </trim>
  </insert>
</mapper>