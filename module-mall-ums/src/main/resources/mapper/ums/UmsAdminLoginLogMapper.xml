<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.ums.mapper.UmsAdminLoginLogMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.ums.domain.UmsAdminLoginLog">
    <!--@mbg.generated-->
    <!--@Table ums_admin_login_log-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="admin_id" jdbcType="BIGINT" property="adminId" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="ip" jdbcType="VARCHAR" property="ip" />
    <result column="address" jdbcType="VARCHAR" property="address" />
    <result column="user_agent" jdbcType="VARCHAR" property="userAgent" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, admin_id, create_time, ip, address, user_agent
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ums_admin_login_log
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="admin_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.adminId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
        </foreach>
      </trim>
      <trim prefix="ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.ip,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.address,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="user_agent = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.userAgent,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ums_admin_login_log
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="admin_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.adminId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.adminId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="create_time = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.createTime != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.createTime,jdbcType=TIMESTAMP}
          </if>
        </foreach>
      </trim>
      <trim prefix="ip = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.ip != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.ip,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.address != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.address,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="user_agent = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.userAgent != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.userAgent,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_admin_login_log
    (admin_id, create_time, ip, address, user_agent)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.adminId,jdbcType=BIGINT}, #{item.createTime,jdbcType=TIMESTAMP}, #{item.ip,jdbcType=VARCHAR}, 
        #{item.address,jdbcType=VARCHAR}, #{item.userAgent,jdbcType=VARCHAR})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.ums.domain.UmsAdminLoginLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_admin_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      admin_id,
      create_time,
      ip,
      address,
      user_agent,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{adminId,jdbcType=BIGINT},
      #{createTime,jdbcType=TIMESTAMP},
      #{ip,jdbcType=VARCHAR},
      #{address,jdbcType=VARCHAR},
      #{userAgent,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      admin_id = #{adminId,jdbcType=BIGINT},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      ip = #{ip,jdbcType=VARCHAR},
      address = #{address,jdbcType=VARCHAR},
      user_agent = #{userAgent,jdbcType=VARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.ums.domain.UmsAdminLoginLog" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_admin_login_log
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="adminId != null">
        admin_id,
      </if>
      <if test="createTime != null">
        create_time,
      </if>
      <if test="ip != null">
        ip,
      </if>
      <if test="address != null">
        address,
      </if>
      <if test="userAgent != null">
        user_agent,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="adminId != null">
        #{adminId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        #{ip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        #{address,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null">
        #{userAgent,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="adminId != null">
        admin_id = #{adminId,jdbcType=BIGINT},
      </if>
      <if test="createTime != null">
        create_time = #{createTime,jdbcType=TIMESTAMP},
      </if>
      <if test="ip != null">
        ip = #{ip,jdbcType=VARCHAR},
      </if>
      <if test="address != null">
        address = #{address,jdbcType=VARCHAR},
      </if>
      <if test="userAgent != null">
        user_agent = #{userAgent,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>