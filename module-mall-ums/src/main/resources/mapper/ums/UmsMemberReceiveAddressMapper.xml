<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.ums.mapper.UmsMemberReceiveAddressMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.ums.domain.UmsMemberReceiveAddress">
    <!--@mbg.generated-->
    <!--@Table ums_member_receive_address-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="member_id" jdbcType="BIGINT" property="memberId" />
    <result column="name" jdbcType="VARCHAR" property="name" />
    <result column="phone_number" jdbcType="VARCHAR" property="phoneNumber" />
    <result column="default_status" jdbcType="INTEGER" property="defaultStatus" />
    <result column="post_code" jdbcType="VARCHAR" property="postCode" />
    <result column="province" jdbcType="VARCHAR" property="province" />
    <result column="city" jdbcType="VARCHAR" property="city" />
    <result column="region" jdbcType="VARCHAR" property="region" />
    <result column="detail_address" jdbcType="VARCHAR" property="detailAddress" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, member_id, `name`, phone_number, default_status, post_code, province, city, region, 
    detail_address
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ums_member_receive_address
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="member_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.memberId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="phone_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.phoneNumber,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="default_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.defaultStatus,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="post_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.postCode,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="province = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.province,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="city = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.city,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="region = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.region,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="detail_address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.detailAddress,jdbcType=VARCHAR}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update ums_member_receive_address
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="member_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.memberId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.memberId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="`name` = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.name != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.name,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="phone_number = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.phoneNumber != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.phoneNumber,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="default_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.defaultStatus != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.defaultStatus,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="post_code = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.postCode != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.postCode,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="province = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.province != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.province,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="city = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.city != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.city,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="region = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.region != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.region,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="detail_address = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.detailAddress != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.detailAddress,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_member_receive_address
    (member_id, `name`, phone_number, default_status, post_code, province, city, region, 
      detail_address)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.memberId,jdbcType=BIGINT}, #{item.name,jdbcType=VARCHAR}, #{item.phoneNumber,jdbcType=VARCHAR}, 
        #{item.defaultStatus,jdbcType=INTEGER}, #{item.postCode,jdbcType=VARCHAR}, #{item.province,jdbcType=VARCHAR}, 
        #{item.city,jdbcType=VARCHAR}, #{item.region,jdbcType=VARCHAR}, #{item.detailAddress,jdbcType=VARCHAR}
        )
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.ums.domain.UmsMemberReceiveAddress" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_member_receive_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      member_id,
      `name`,
      phone_number,
      default_status,
      post_code,
      province,
      city,
      region,
      detail_address,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{memberId,jdbcType=BIGINT},
      #{name,jdbcType=VARCHAR},
      #{phoneNumber,jdbcType=VARCHAR},
      #{defaultStatus,jdbcType=INTEGER},
      #{postCode,jdbcType=VARCHAR},
      #{province,jdbcType=VARCHAR},
      #{city,jdbcType=VARCHAR},
      #{region,jdbcType=VARCHAR},
      #{detailAddress,jdbcType=VARCHAR},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      member_id = #{memberId,jdbcType=BIGINT},
      `name` = #{name,jdbcType=VARCHAR},
      phone_number = #{phoneNumber,jdbcType=VARCHAR},
      default_status = #{defaultStatus,jdbcType=INTEGER},
      post_code = #{postCode,jdbcType=VARCHAR},
      province = #{province,jdbcType=VARCHAR},
      city = #{city,jdbcType=VARCHAR},
      region = #{region,jdbcType=VARCHAR},
      detail_address = #{detailAddress,jdbcType=VARCHAR},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.ums.domain.UmsMemberReceiveAddress" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into ums_member_receive_address
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="memberId != null">
        member_id,
      </if>
      <if test="name != null">
        `name`,
      </if>
      <if test="phoneNumber != null">
        phone_number,
      </if>
      <if test="defaultStatus != null">
        default_status,
      </if>
      <if test="postCode != null">
        post_code,
      </if>
      <if test="province != null">
        province,
      </if>
      <if test="city != null">
        city,
      </if>
      <if test="region != null">
        region,
      </if>
      <if test="detailAddress != null">
        detail_address,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        #{memberId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="defaultStatus != null">
        #{defaultStatus,jdbcType=INTEGER},
      </if>
      <if test="postCode != null">
        #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        #{region,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null">
        #{detailAddress,jdbcType=VARCHAR},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="memberId != null">
        member_id = #{memberId,jdbcType=BIGINT},
      </if>
      <if test="name != null">
        `name` = #{name,jdbcType=VARCHAR},
      </if>
      <if test="phoneNumber != null">
        phone_number = #{phoneNumber,jdbcType=VARCHAR},
      </if>
      <if test="defaultStatus != null">
        default_status = #{defaultStatus,jdbcType=INTEGER},
      </if>
      <if test="postCode != null">
        post_code = #{postCode,jdbcType=VARCHAR},
      </if>
      <if test="province != null">
        province = #{province,jdbcType=VARCHAR},
      </if>
      <if test="city != null">
        city = #{city,jdbcType=VARCHAR},
      </if>
      <if test="region != null">
        region = #{region,jdbcType=VARCHAR},
      </if>
      <if test="detailAddress != null">
        detail_address = #{detailAddress,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
</mapper>