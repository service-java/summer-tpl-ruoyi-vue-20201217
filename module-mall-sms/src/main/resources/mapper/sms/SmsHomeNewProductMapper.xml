<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.sms.mapper.SmsHomeNewProductMapper">
  <resultMap id="BaseResultMap" type="com.ruoyi.sms.domain.SmsHomeNewProduct">
    <!--@mbg.generated-->
    <!--@Table sms_home_new_product-->
    <id column="id" jdbcType="BIGINT" property="id" />
    <result column="product_id" jdbcType="BIGINT" property="productId" />
    <result column="product_name" jdbcType="VARCHAR" property="productName" />
    <result column="recommend_status" jdbcType="INTEGER" property="recommendStatus" />
    <result column="sort" jdbcType="INTEGER" property="sort" />
  </resultMap>
  <sql id="Base_Column_List">
    <!--@mbg.generated-->
    id, product_id, product_name, recommend_status, sort
  </sql>
  <update id="updateBatch" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sms_home_new_product
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="product_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productId,jdbcType=BIGINT}
        </foreach>
      </trim>
      <trim prefix="product_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.productName,jdbcType=VARCHAR}
        </foreach>
      </trim>
      <trim prefix="recommend_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.recommendStatus,jdbcType=INTEGER}
        </foreach>
      </trim>
      <trim prefix="sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          when id = #{item.id,jdbcType=BIGINT} then #{item.sort,jdbcType=INTEGER}
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <update id="updateBatchSelective" parameterType="java.util.List">
    <!--@mbg.generated-->
    update sms_home_new_product
    <trim prefix="set" suffixOverrides=",">
      <trim prefix="product_id = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productId != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.productId,jdbcType=BIGINT}
          </if>
        </foreach>
      </trim>
      <trim prefix="product_name = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.productName != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.productName,jdbcType=VARCHAR}
          </if>
        </foreach>
      </trim>
      <trim prefix="recommend_status = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.recommendStatus != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.recommendStatus,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
      <trim prefix="sort = case" suffix="end,">
        <foreach collection="list" index="index" item="item">
          <if test="item.sort != null">
            when id = #{item.id,jdbcType=BIGINT} then #{item.sort,jdbcType=INTEGER}
          </if>
        </foreach>
      </trim>
    </trim>
    where id in
    <foreach close=")" collection="list" item="item" open="(" separator=", ">
      #{item.id,jdbcType=BIGINT}
    </foreach>
  </update>
  <insert id="batchInsert" keyColumn="id" keyProperty="id" parameterType="map" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sms_home_new_product
    (product_id, product_name, recommend_status, sort)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.productId,jdbcType=BIGINT}, #{item.productName,jdbcType=VARCHAR}, #{item.recommendStatus,jdbcType=INTEGER}, 
        #{item.sort,jdbcType=INTEGER})
    </foreach>
  </insert>
  <insert id="insertOrUpdate" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.sms.domain.SmsHomeNewProduct" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sms_home_new_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      product_id,
      product_name,
      recommend_status,
      sort,
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      #{productId,jdbcType=BIGINT},
      #{productName,jdbcType=VARCHAR},
      #{recommendStatus,jdbcType=INTEGER},
      #{sort,jdbcType=INTEGER},
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      product_id = #{productId,jdbcType=BIGINT},
      product_name = #{productName,jdbcType=VARCHAR},
      recommend_status = #{recommendStatus,jdbcType=INTEGER},
      sort = #{sort,jdbcType=INTEGER},
    </trim>
  </insert>
  <insert id="insertOrUpdateSelective" keyColumn="id" keyProperty="id" parameterType="com.ruoyi.sms.domain.SmsHomeNewProduct" useGeneratedKeys="true">
    <!--@mbg.generated-->
    insert into sms_home_new_product
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        id,
      </if>
      <if test="productId != null">
        product_id,
      </if>
      <if test="productName != null">
        product_name,
      </if>
      <if test="recommendStatus != null">
        recommend_status,
      </if>
      <if test="sort != null">
        sort,
      </if>
    </trim>
    values
    <trim prefix="(" suffix=")" suffixOverrides=",">
      <if test="id != null">
        #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        #{productId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        #{productName,jdbcType=VARCHAR},
      </if>
      <if test="recommendStatus != null">
        #{recommendStatus,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        #{sort,jdbcType=INTEGER},
      </if>
    </trim>
    on duplicate key update 
    <trim suffixOverrides=",">
      <if test="id != null">
        id = #{id,jdbcType=BIGINT},
      </if>
      <if test="productId != null">
        product_id = #{productId,jdbcType=BIGINT},
      </if>
      <if test="productName != null">
        product_name = #{productName,jdbcType=VARCHAR},
      </if>
      <if test="recommendStatus != null">
        recommend_status = #{recommendStatus,jdbcType=INTEGER},
      </if>
      <if test="sort != null">
        sort = #{sort,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
</mapper>